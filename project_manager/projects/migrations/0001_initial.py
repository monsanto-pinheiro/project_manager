# Generated by Django 3.0.4 on 2020-04-17 11:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import encrypted_fields.fields
import project_manager.formatChecker
import projects.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('delete_date', models.DateTimeField(null=True, verbose_name='Delete Date')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('description', models.CharField(blank=True, default='', max_length=1000, null=True, verbose_name='Description')),
                ('delete_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='delete_event', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'ordering': ['-creation_date'],
                'permissions': [('can_create_events', 'Can create events'), ('can_delete_events', 'Can delete events'), ('can_view_events', 'Can view events'), ('can_update_events', 'Can update events')],
            },
        ),
        migrations.CreateModel(
            name='Institute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_name_data', encrypted_fields.fields.EncryptedCharField(max_length=250, unique=True, verbose_name='Name')),
                ('name', encrypted_fields.fields.SearchField(db_index=True, encrypted_field_name='_name_data', hash_key='20754beae103fbea69b51d0179153858c01e6a9e58e77f5918affbfc500fe6ef', max_length=66, null=True)),
                ('_abbreviation_data', encrypted_fields.fields.EncryptedCharField(max_length=30, unique=True, verbose_name='Abbreviation')),
                ('abbreviation', encrypted_fields.fields.SearchField(db_index=True, encrypted_field_name='_abbreviation_data', hash_key='6ab61b66a08ed8cd0bf005f5b854e7794a758fb8d072d254c656a0f523a97d68', max_length=66, null=True)),
                ('_city_data', encrypted_fields.fields.EncryptedCharField(max_length=30, verbose_name='City')),
                ('city', encrypted_fields.fields.SearchField(db_index=True, encrypted_field_name='_city_data', hash_key='7e457702ce8af0fe88483a11d2a37294b58b10e046fef5aba9031bb4f52ee3d7', max_length=66, null=True)),
                ('is_obsolete', models.BooleanField(default=False, verbose_name='Obsolete')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='institute', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['abbreviation'],
                'permissions': [('can_view_institutes', 'Can view institutes'), ('can_add_institutes', 'Can add institutes'), ('can_delete_institutes', 'Can delete institutes'), ('can_update_institutes', 'Can update institutes')],
            },
        ),
        migrations.CreateModel(
            name='MetaKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_index=True, max_length=200, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Specie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True, verbose_name='Name')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specie', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
                'permissions': [('can_create_specietypes', 'Can create specie types'), ('can_delete_specietypes', 'Can delete specie types'), ('can_view_specietypes', 'Can view specie types'), ('can_update_specietypes', 'Can update specie types')],
            },
        ),
        migrations.CreateModel(
            name='Research',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_name_data', encrypted_fields.fields.EncryptedCharField(max_length=250, unique=True, verbose_name='Name')),
                ('name', encrypted_fields.fields.SearchField(db_index=True, encrypted_field_name='_name_data', hash_key='d4a3f5696979322695d6c3e016d218eef71f7a1f71c69f32e8d9cf58f3035f23', max_length=66, null=True)),
                ('_email_data', encrypted_fields.fields.EncryptedCharField(max_length=100, verbose_name='Email')),
                ('email', encrypted_fields.fields.SearchField(db_index=True, encrypted_field_name='_email_data', hash_key='288a4d705dedcce635f698bfe774a5f5afcc9a6478e3c10719750b6d5e24e6f8', max_length=66, null=True)),
                ('_phone_data', encrypted_fields.fields.EncryptedCharField(blank=True, max_length=30, null=True, verbose_name='Phone')),
                ('phone', encrypted_fields.fields.SearchField(db_index=True, encrypted_field_name='_phone_data', hash_key='63d15ca4b6b729d274b59b62723745b4a6f88c744ece35ed347f8b8a142248ce', max_length=66, null=True)),
                ('is_obsolete', models.BooleanField(default=False, verbose_name='Obsolete')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='research', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
                'permissions': [('can_view_researches', 'Can view researches'), ('can_add_researches', 'Can add researches'), ('can_delete_researches', 'Can delete researches'), ('can_update_researches', 'Can update researches')],
            },
        ),
        migrations.CreateModel(
            name='ProjectType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=40, unique=True, verbose_name='Name')),
                ('abbreviation', models.CharField(max_length=20, verbose_name='Abbreviation')),
                ('description', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Description')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projectype', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
                'permissions': [('can_create_projecttypes', 'Can create project types'), ('can_delete_projecttypes', 'Can delete project types'), ('can_view_projecttypes', 'Can view project types'), ('can_update_projecttypes', 'Can update project types')],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(default='', max_length=1000, verbose_name='Description')),
                ('reference', models.CharField(max_length=50, verbose_name='Reference ID')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('delete_date', models.DateTimeField(null=True, verbose_name='Delete Date')),
                ('count_year', models.IntegerField(default=1)),
                ('delete_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='delete_project', to=settings.AUTH_USER_MODEL)),
                ('institute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='project', to='projects.Institute', verbose_name='Institute')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('project_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project', to='projects.ProjectType', verbose_name='Proj.Type')),
                ('research', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='project', to='projects.Research', verbose_name='Research')),
                ('specie', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project', to='projects.Specie', verbose_name='Specie')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ['-creation_date'],
                'permissions': [('can_create_projects', 'Can create projects'), ('can_delete_projects', 'Can delete projects'), ('can_view_projects', 'Can view projects'), ('can_update_projects', 'Can update projects')],
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=400)),
                ('path_name', project_manager.formatChecker.ContentTypeRestrictedFileField(max_length=500, upload_to=projects.models.user_directory_path)),
                ('_hash_file_data', encrypted_fields.fields.EncryptedCharField(blank=True, max_length=250, null=True)),
                ('hash_file', encrypted_fields.fields.SearchField(db_index=True, encrypted_field_name='_hash_file_data', hash_key='3aa6bbf41d332e751e895700ef423a9a455fa3c73bc2e5931c60f66c997323a8', max_length=66, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('delete_date', models.DateTimeField(null=True, verbose_name='Delete Date')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('delete_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='delete_file', to=settings.AUTH_USER_MODEL)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='file', to='projects.Event')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('can_upload_files', 'Can upload files'), ('can_delete_files', 'Can delete files'), ('can_view_files', 'Can view files')],
            },
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True, verbose_name='Name')),
                ('description', models.CharField(default='', max_length=250, verbose_name='Description')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='eventtype', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
                'permissions': [('can_create_eventtypes', 'Can create event types'), ('can_delete_eventtypes', 'Can delete event types'), ('can_view_eventtypes', 'Can view event types'), ('can_update_eventtypes', 'Can update event types')],
            },
        ),
        migrations.AddField(
            model_name='event',
            name='event_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='event', to='projects.EventType'),
        ),
        migrations.AddField(
            model_name='event',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='event', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='event',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='event', to='projects.Project'),
        ),
    ]
