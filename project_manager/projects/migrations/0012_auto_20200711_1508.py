# Generated by Django 3.0.4 on 2020-07-11 14:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('projects', '0011_auto_20200705_2346'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='institute',
            options={'ordering': ['name'], 'permissions': [('can_view_institutes', 'Can view institutes'), ('can_add_institutes', 'Can add institutes'), ('can_delete_institutes', 'Can delete institutes'), ('can_update_institutes', 'Can update institutes')]},
        ),
        migrations.AlterModelOptions(
            name='personinevent',
            options={'ordering': ['-creation_date'], 'permissions': [('can_create_person_in_event', 'Can create person in event'), ('can_delete_person_in_event', 'Can delete person in event'), ('can_view_person_in_event', 'Can view person in event')]},
        ),
        migrations.AlterModelOptions(
            name='project',
            options={'ordering': ['-start_date', '-id'], 'permissions': [('can_create_projects', 'Can create projects'), ('can_delete_projects', 'Can delete projects'), ('can_view_projects', 'Can view projects'), ('can_update_projects', 'Can update projects')], 'verbose_name': 'Project', 'verbose_name_plural': 'Projects'},
        ),
        migrations.AddField(
            model_name='project',
            name='number_hours_of_equiments',
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='project',
            name='end_date',
            field=models.DateField(default=django.utils.timezone.now, verbose_name='End Date'),
        ),
        migrations.AlterField(
            model_name='project',
            name='start_date',
            field=models.DateField(default=django.utils.timezone.now, verbose_name='Start Date'),
        ),
        migrations.AlterField(
            model_name='projecttype',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='projectype', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='specie',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='specie', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='MetaKeyEquipmentInEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('value', models.CharField(default='value not needed', max_length=200)),
                ('description', models.TextField(default='')),
                ('equipment_in_event', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='meta_key_equipment_in_event', to='projects.PersonInEvent')),
                ('meta_tag', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='meta_key_equipment_in_event', to='projects.MetaKey')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='meta_key_equipment_in_event', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['equipment_in_event__id', '-creation_date'],
            },
        ),
        migrations.CreateModel(
            name='EquipmentInEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_hours', models.IntegerField(default=0)),
                ('description', models.CharField(blank=True, default='', max_length=1000, verbose_name='Description')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('delete_date', models.DateTimeField(null=True, verbose_name='Delete Date')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('delete_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='delete_equipment_event', to=settings.AUTH_USER_MODEL)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='equipment_event', to=settings.AUTH_USER_MODEL)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='equipment_event', to='projects.Event')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='owner_equipment_event', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-creation_date'],
                'permissions': [('can_create_equipment_in_event', 'Can create equipment in event'), ('can_delete_equipment_in_event', 'Can delete equipment in event'), ('can_view_equipment_in_event', 'Can view equipment in event')],
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True, verbose_name='Name')),
                ('room', models.CharField(max_length=50, verbose_name='Room')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP address')),
                ('description', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Description')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='equipment', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
                'permissions': [('can_create_equipment', 'Can create equipments'), ('can_delete_equipment', 'Can delete equipment'), ('can_view_equipment', 'Can view equipment'), ('can_update_equipment', 'Can update equipment')],
            },
        ),
    ]
